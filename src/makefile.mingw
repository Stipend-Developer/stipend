# Copyright (c) 2009-2010 Satoshi Nakamoto
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

USE_UPNP:=-
USE_WALLET:=1
USE_LOWMEM:=0

BOOST_SUFFIX?=-mgw49-mt-s-1_57

INCLUDEPATHS= \
 -I"$(CURDIR)" \
 -I"c:/dev/coindeps32/boost_1_57_0/include" \
 -I"c:/dev/coindeps32/bdb-4.8/include" \
 -I"c:/dev/coindeps32/openssl-1.0.1p/include" \
 -I"c:/dev/coindeps32/Secp256k1/include" \
 -I"c:/dev/coindeps32/miniupnpc-1.9"

LIBPATHS= \
 -L"$(CURDIR)/leveldb" \
 -L"c:/dev/coindeps32/boost_1_57_0/lib" \
 -L"c:/dev/coindeps32/bdb-4.8/lib" \
 -L"c:/dev/coindeps32/openssl-1.0.1p/lib" \
 -L"c:/dev/coindeps32/Secp256k1/lib" \
 -L"c:/dev/coindeps32/miniupnpc-1.9"

LIBS= \
 -l leveldb \
 -l memenv \
 -l boost_system$(BOOST_SUFFIX) \
 -l boost_filesystem$(BOOST_SUFFIX) \
 -l boost_program_options$(BOOST_SUFFIX) \
 -l boost_thread$(BOOST_SUFFIX) \
 -l boost_chrono$(BOOST_SUFFIX) \
 -l db_cxx \
 -l ssl \
 -l secp256k1 \
 -l crypto

DEFS=-DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -DBOOST_SPIRIT_THREADSAFE
DEBUGFLAGS=-g
CFLAGS=-mthreads -O2 -w -Wall -Wextra -Wno-ignored-qualifiers -Wformat -Wformat-security -Wno-unused-parameter -fpermissive $(DEBUGFLAGS) $(DEFS) $(INCLUDEPATHS)
LDFLAGS=-Wl,--dynamicbase -Wl,--nxcompat -Wl,--large-address-aware -static

TESTDEFS = -DTEST_DATA_DIR=$(abspath test/data)

ifndef USE_UPNP
        override USE_UPNP = -
endif
ifneq (${USE_UPNP}, -)
 LIBS += -l miniupnpc -l iphlpapi
 DEFS += -DMINIUPNP_STATICLIB -DUSE_UPNP=$(USE_UPNP)
endif

ifeq (${USE_LOWMEM}, 1)
    DEFS += -DLOWMEM
endif

LIBS += -l mingwthrd -l kernel32 -l user32 -l gdi32 -l comdlg32 -l winspool -l winmm -l shell32 -l comctl32 -l ole32 -l oleaut32 -l uuid -l rpcrt4 -l advapi32 -l ws2_32 -l mswsock

# TODO: make the mingw builds smarter about dependencies, like the linux/osx builds are
HEADERS = $(wildcard *.h)

OBJS= \
    obj/alert.o \
    obj/allocators.o \
    obj/support/cleanse.o \
    obj/base58.o \
    obj/version.o \
    obj/checkpoints.o \
    obj/netbase.o \
    obj/addrman.o \
    obj/crypter.o \
    obj/key.o \
    obj/pubkey.o \
    obj/ecwrapper.o \
    obj/init.o \
    obj/bitcoind.o \
    obj/keystore.o \
    obj/core.o \
    obj/main.o \
    obj/net.o \
    obj/protocol.o \
    obj/rpcclient.o \
    obj/rpcprotocol.o \
    obj/rpcserver.o \
    obj/rpcmisc.o \
    obj/rpcnet.o \
    obj/rpcblockchain.o \
    obj/rpcrawtransaction.o \
    obj/rpcsmessage.o \
    obj/script.o \
    obj/scrypt.o \
    obj/sync.o \
    obj/txmempool.o \
    obj/util.o \
    obj/hash.o \
    obj/noui.o \
    obj/kernel.o \
    obj/pbkdf2.o \
    obj/chainparams.o \
    obj/stealth.o \
    obj/activemasternode.o \
    obj/darksend.o \
    obj/darksend-relay.o \
    obj/instantx.o \
    obj/masternodeconfig.o \
    obj/masternodeman.o \
    obj/masternode.o \
    obj/masternode-payments.o \
    obj/rpcdarksend.o \
    obj/spork.o \
    obj/crypto/hmac_sha256.o \
    obj/crypto/hmac_sha512.o \
    obj/crypto/ripemd160.o \
    obj/crypto/sha1.o \
    obj/crypto/sha256.o \
    obj/crypto/sha512.o \
    obj/smessage.o \
    obj/cubehash.o \
    obj/luffa.o \
    obj/aes_helper.o \
    obj/echo.o \
    obj/shavite.o \
    obj/simd.o \
    obj/blake.o \
    obj/bmw.o \
    obj/groestl.o \
    obj/jh.o \
    obj/keccak.o \
    obj/skein.o

ifeq (${USE_WALLET}, 1)
    DEFS += -DENABLE_WALLET
    OBJS += \
        obj/db.o \
        obj/miner.o \
        obj/rpcdump.o \
        obj/rpcmining.o \
        obj/rpcwallet.o \
        obj/wallet.o \
        obj/walletdb.o
endif

all: stipendd.exe

LIBS += $(CURDIR)/leveldb/libleveldb.a $(CURDIR)/leveldb/libmemenv.a -l shlwapi
DEFS += $(addprefix -I,$(CURDIR)/leveldb/include)
DEFS += $(addprefix -I,$(CURDIR)/leveldb/helpers)
OBJS += obj/txdb-leveldb.o
leveldb/libleveldb.a:
	@echo "Building LevelDB ..."; cd leveldb; chmod 755 *;make libleveldb.a libmemenv.a; cd ..;
obj/txdb-leveldb.o: leveldb/libleveldb.a

obj/%.o: %.cpp $(HEADERS)
	g++ -c $(CFLAGS) -o $@ $<

obj/%.o: %.c $(HEADERS)
	$(CXX) -c $(CFLAGS) -fpermissive -o $@ $<

stipendd.exe: $(OBJS:obj/%=obj/%)
	g++ $(CFLAGS) $(LDFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS)

clean:
	-rm -f obj/*.o
	-rm -f stipendd.exe
	-rm -f obj/build.h
	cd leveldb && TARGET_OS=NATIVE_WINDOWS $(MAKE) clean && cd ..

FORCE:
